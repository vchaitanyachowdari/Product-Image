// Re-export all types for easy importing

// Page navigation type
export type Page = 'login' | 'register' | 'app';

// Image payload type for API
export interface ImagePayload {
  base64: string;
  mimeType: string;
}

// User types
export type {
  User,
  UserPreferences,
  UserProfile,
  LoginCredentials,
  RegisterData,
  AuthResponse,
  TokenResponse,
  PasswordResetRequest,
  PasswordReset,
  EmailVerification,
  UserSession,
  DeviceInfo,
  SubscriptionTier,
  UserRole,
} from './user.types';

// Image types
export type {
  UploadedImage,
  GeneratedImage,
  ImageMetadata,
  GenerationMetadata,
  GenerationParameters,
  ImageCollection,
  ImageHistory,
  ImageSearchFilters,
  ImageSearchResult,
  FileUploadConfig,
  UploadProgress,
  FileValidationResult,
  ImageProcessingOptions,
  ImageCompressionResult,
  ImageStatus,
  GenerationStatus,
  ImageFormat,
  GenerationStyle,
  GenerationQuality,
} from './image.types';

// API types
export type {
  ApiResponse,
  ResponseMeta,
  PaginationMeta,
  RateLimitInfo,
  UploadResponse,
  GenerationResponse,
  UserResponse,
  UsersListResponse,
  ApiError,
  ValidationError as ApiValidationError,
  ApiRequestConfig,
  AuthHeaders,
  UploadRequest,
  GenerationRequest,
  BatchRequest,
  BatchResponse,
  WebhookPayload,
  WebhookEvent,
  ApiClientConfig,
  HealthCheckResponse,
  ServiceStatus,
  HttpMethod,
  ApiStatus,
} from './api.types';

// Error types
export type {
  AppError,
  ValidationError,
  AuthenticationError,
  AuthorizationError,
  NetworkError,
  FileUploadError,
  ImageProcessingError,
  ExternalServiceError,
  ErrorContext,
  ErrorReport,
  Breadcrumb,
  ErrorBoundaryState,
  ErrorRecoveryAction,
  ErrorRecoveryOptions,
  UserErrorMessage,
  ErrorStats,
  RetryConfig,
  ErrorHandlerConfig,
  ErrorSeverity,
  ErrorCategory,
} from './error.types';

// Component types
export type {
  BaseComponentProps,
  ButtonProps,
  InputProps,
  FormFieldProps,
  ModalProps,
  ImageProps,
  AvatarProps,
  BadgeProps,
  SpinnerProps,
  ProgressBarProps,
  ImageUploaderProps,
  ImageGalleryProps,
  NavigationProps,
  LayoutProps,
  ThemeConfig,
  ButtonVariant,
  ButtonSize,
  InputType,
  InputSize,
  InputState,
  AvatarSize,
  BadgeVariant,
  BadgeSize,
  SpinnerSize,
  NavigationItem,
  ThemeMode,
  ClickHandler,
  ChangeHandler,
  SubmitHandler,
  KeyboardHandler,
  ComponentVariant,
  ComponentSize,
  ComponentState,
  Breakpoint as ComponentBreakpoint,
  ResponsiveValue as ComponentResponsiveValue,
  AnimationType,
  AnimationDuration,
  AnimationProps,
} from './component.types';

// State types
export type {
  AuthState,
  AuthActions,
  ImagesState,
  ImagesActions,
  UIState,
  UIActions,
  AppStore,
  StoreConfig,
  AsyncActionState,
  AsyncAction,
  Selector,
  AppSelectors,
  StoreHooks,
  StoreMiddleware,
  StoreAction,
  Notification,
  NotificationAction,
  Toast,
  UIPreferences,
} from './state.types';

// Utility types
export type {
  DeepPartial,
  DeepRequired,
  PickByType,
  OmitByType,
  PartialBy,
  RequiredBy,
  ValueOf,
  KeysOf,
  Flatten,
  NonNullable,
  StringKeys,
  NumberKeys,
  SymbolKeys,
  Brand,
  UserId,
  ImageId,
  CollectionId,
  SessionId,
  RequestId,
  Email,
  URL,
  ISODateString,
  Base64String,
  JWTToken,
  AsyncState,
  PaginatedResult,
  ApiEndpoint,
  EventHandler,
  AsyncEventHandler,
  ComponentRef,
  FormFieldValue,
  FormData,
  ValidationResult,
  ApiErrorResponse,
  ApiSuccessResponse,
  Environment,
  LogLevel,
  HttpStatusCode,
  MimeType,
  FileExtension,
  ColorFormat,
  Breakpoint as UtilityBreakpoint,
  ResponsiveValue as UtilityResponsiveValue,
  ThemeToken,
  CSSProperty,
  StyleObject,
  ClassName,
  Never,
  DiscriminatedUnion,
  WithDefaults,
  Immutable,
  Mutable,
} from './utility.types';

// Validation schemas and inferred types
export {
  loginCredentialsSchema,
  registerDataSchema,
  userPreferencesSchema,
  passwordResetSchema,
  fileUploadSchema,
  multipleFilesUploadSchema,
  generationParametersSchema,
  generationRequestSchema,
  imageCollectionSchema,
  imageSearchFiltersSchema,
  paginationSchema,
  apiResponseSchema,
  envConfigSchema,
  containsProfanity,
  validateFileSignature,
  customFileValidation,
} from './validation.schemas';

// Validation schema inferred types (with different names to avoid conflicts)
export type {
  LoginCredentials as ValidatedLoginCredentials,
  RegisterData as ValidatedRegisterData,
  UserPreferences as ValidatedUserPreferences,
  GenerationParameters as ValidatedGenerationParameters,
  GenerationRequest as ValidatedGenerationRequest,
  ImageCollection as ValidatedImageCollection,
  ImageSearchFilters as ValidatedImageSearchFilters,
  PaginationParams,
  ApiResponse as ValidatedApiResponse,
  EnvConfig,
} from './validation.schemas';

// Constants
export * from './constants';